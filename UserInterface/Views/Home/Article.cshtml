<!DOCTYPE html>
@model UserInterface.Models.ArticleComment

@{
    ViewData["Title"] = "Article";
    var comments = ViewData["Comments"] as List<Core.Entities.CommentWithName>;
    var article = ViewData["Article"] as Core.Entities.Articles;
    string articleText = (string)ViewData["articleText"];
    var isLoggedIn = (bool)ViewData["isLoggedIn"];
}

<h2 class="titletext1">@article.Title</h2>
<div class="container2 background1">
    <p class="nomargin">Created: @article.CreateDate</p>
    @if (@article.EditDate.Ticks != 0)
    {
    <p class="nomargin">Edited: @article.EditDate</p>
    }
</div>

<div style="background-color:#de54e7">
    <div>@Html.Raw(articleText)</div>
</div>

<h4 class="titletext2" style="margin-top:1.5rem">Comments</h4>

@if (isLoggedIn)
{
    <div id="formContainer">
        <form class="background2" id="commentForm" asp-action="Article">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div>
                <input asp-for="Commentzz" class="inputtext" />
                <span asp-validation-for="Commentzz" class="text-danger"></span>
            </div>
            <div>
                <input asp-for="CommentsIdzz" value="" />
            </div>
            <div>
                <input asp-for="Articleeeid" value="@article.Id"/>
            </div>
            <div>
                <input type="submit" value="Add comment" />
            </div>
                <button style="margin-bottom: .25rem" type="button" onclick="Cancel(event)">Cancel</button>
        </form>
    </div>
}

<div id="commentscontainer">
    @foreach (var comment in comments)
    {
        <div data-commentsid="@comment.CommentsId" id="@comment.Id" class="comment background1">
            <div data-commentsid2="@comment.Id" class="comment2 background2">
                <div class="container2 background1">
                    <p class="nomargin">@comment.CreateDate</p>
                    @{if (comment.AccountsId.HasValue)
                    {
                    <p class="nomargin">@comment.Name</p>
                    }
                    else
                    {
                    <p class="nomargin" style="color:#ff0f1d">[DELETED USER]</p>
                    }}
                </div>
                <p style="margin:0;padding:0 .25rem">@comment.Comment</p>
                @{if (isLoggedIn)
                  {<button onclick="SelectedComment(this)">Answer</button>}
                }
            </div>
        </div>
    }
</div>

<script>
    document.addEventListener('DOMContentLoaded', SortComments());

    function SortComments()
    {
        const container = [].slice.call(document.getElementById('commentscontainer').children);
        container.forEach(element => {
            if (element.dataset.commentsid > 0)
            {
                const parentElement = document.getElementById(element.dataset.commentsid);
                parentElement.append(element);
            }
        });
    }

    function SelectedComment(button)
    {
        const element = document.getElementById('CommentsIdzz');
        const formContainer = document.getElementById('commentForm');
        const comment2 = document.querySelector('[data-commentsid2="'+button.parentElement.parentElement.id+'"]');
        comment2.insertAdjacentElement('beforeend', formContainer);
        element.value = button.parentElement.parentElement.id;
    }

    function Cancel(event)
    {
        const selected = document.getElementById('CommentsIdzz');
        selected.value = "";
        const element = document.getElementById('formContainer');
        const formContainer = document.getElementById('commentForm');
        element.append(formContainer);
    }
</script>
