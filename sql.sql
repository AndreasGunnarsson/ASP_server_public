USE testdatabasex;
SHOW TABLES;

DROP TABLE IF EXISTS ArticlesCategories;
DROP TABLE IF EXISTS Categories;
DROP TABLE IF EXISTS Comments;
DROP TABLE IF EXISTS Articles;
DROP TABLE IF EXISTS Accounts;
DROP TABLE IF EXISTS Roles;
-- --------------------------------
CREATE TABLE Roles (
	Id TINYINT UNSIGNED NOT NULL,
	Priveledge VARCHAR(50) UNIQUE NOT NULL,
	CONSTRAINT PRIMARY KEY (Id)
);

INSERT INTO Roles (Id, Priveledge) VALUES (1, 'Admin'), (2, 'User');

CREATE TABLE Accounts (
	Id INT UNSIGNED AUTO_INCREMENT,
	Name VARCHAR(40) UNIQUE NOT NULL,
	PasswordHash VARBINARY(100) NOT NULL,
	PasswordSalt VARBINARY(100) NOT NULL,
	RolesId TINYINT UNSIGNED NOT NULL DEFAULT 2,
	CONSTRAINT PRIMARY KEY (Id),
	CONSTRAINT FOREIGN KEY (RolesId) REFERENCES Roles(Id)
);

CREATE TABLE Articles (
	Id INT UNSIGNED AUTO_INCREMENT,
	Title VARCHAR(200) NOT NULL,
	CreateDate DATETIME DEFAULT NOW(),
	EditDate DATETIME,
	CONSTRAINT PRIMARY KEY (Id)
);

CREATE TABLE Categories (
	Id TINYINT UNSIGNED AUTO_INCREMENT,
	Category VARCHAR(100) NOT NULL,
	CONSTRAINT PRIMARY KEY (Id)
);

CREATE TABLE ArticlesCategories (
	ArticlesId INT UNSIGNED,
	CategoriesId TINYINT UNSIGNED,
	CONSTRAINT FOREIGN KEY (ArticlesId) REFERENCES Articles(Id) ON DELETE CASCADE,
	CONSTRAINT FOREIGN KEY (CategoriesId) REFERENCES Categories(Id) ON DELETE CASCADE
);

CREATE TABLE Comments (
	Id INT UNSIGNED AUTO_INCREMENT,
	Comment VARCHAR(200),
	CreateDate DATETIME DEFAULT NOW(),
	EditDate DATETIME,
	AccountsId INT UNSIGNED NULL,
	CommentsId INT UNSIGNED,
	ArticlesId INT UNSIGNED NOT NULL,
	CONSTRAINT PRIMARY KEY (Id),
	CONSTRAINT FOREIGN KEY (AccountsId) REFERENCES Accounts(Id) ON DELETE SET NULL,
	CONSTRAINT FOREIGN KEY (ArticlesId) REFERENCES Articles(Id) ON DELETE CASCADE,
	CONSTRAINT FOREIGN KEY (CommentsId) REFERENCES Comments(Id) ON DELETE CASCADE
);